openapi: "3.0.0"
info:
  version: 1.0.0
  title: Items API
paths:
  /api/v1/items:
    get:
      tags:
        - items
      summary: Get items
      operationId: getItems
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items"
        '400':
          description: 'Bad request'
        '415':
          description: 'Unsupported Media Type'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
    post:
      tags:
        - items
      summary: Create an item
      operationId: createItem
      requestBody:
        description: create an item
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemRequestBody'
      responses:
        '201':
          description: 'Created'
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'

  /api/v1/items/{id}:
    get:
      summary: Get item by id
      operationId: getItemById
      tags:
        - items
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the item to retrieve
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
    put:
      tags:
        - items
      summary: Update an item
      operationId: updateItem
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the item to be updated
          schema:
            type: integer
            format: int64
      requestBody:
        description: update an existing item
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemRequestBody'
      responses:
        '204':
          description: No content
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
    delete:
      summary: Delete item by id
      operationId: deleteItem
      tags:
        - items
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the item to be deleted
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No content
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'

  /api/v1/submissions:
    post:
      summary:
        Submits a claim in the format of CSV or XML, which is then processed and forwarded
        to the Claims API.
      operationId: postSubmission
      tags:
        - submissions
      parameters:
        - name: userId
          in: query
          required: true
          description: The user ID of the user performing the bulk submission
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The submission file in CSV or XML format
              required:
                - file
      
      responses:
        '201':
          description: 'Created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionResponse'
        '400':
          description: 'Bad Request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '500':
          description: 'Internal server error'

components:
  schemas:
    SubmissionResponse:
      required:
        - submission-id
      properties:
        submission-id:
          type: string
    Item:
      required:
        - id
        - name
        - description
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
    ItemRequestBody:
      required:
        - name
        - description
      properties:
        name:
          type: string
        description:
          type: string

    Items:
      type: array
      items:
        $ref: "#/components/schemas/Item"