spring:
  application:
    name: laa-data-claims-event-service
  # example database
  datasource:
    url: jdbc:h2:mem:itemsDb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  h2:
    console:
      enabled: true

  #do not auto create db schema, use .sql scripts
  jpa:
    hibernate:
      ddl-auto: none

  threads:
    virtual:
      enabled: true

# used by actuator info endpoint
info:
  app:
    name: laa-data-claims-event-service
    description: laa-data-claims-event-service application that provides a REST API.
    version: 1.0.0

management:
  # specify actuator endpoints to enable
  endpoints:
    web:
      exposure:
        include: health

  # show detailed health status
  endpoint:
    health:
      show-details: always

logging:
  level:
    "org.springframework.web.filter.CommonsRequestLoggingFilter": debug

server:
  port: 8085

laa:
  provider-details-api:
    hostname: ${PROVIDER_DETAILS_API_HOSTNAME}
    url: ${laa.provider-details-api.hostname}
    accessToken: ${PROVIDER_DETAILS_API_ACCESS_TOKEN}
  claims-api:
    hostname: ${CLAIMS_API_HOSTNAME}
    url: ${laa.claims-api.hostname}
    accessToken: ${CLAIMS_API_ACCESS_TOKEN}
  fee-scheme-platform-api:
    hostname: ${FEE_SCHEME_PLATFORM_API_URL}
    url: ${laa.claims-api.hostname}
    accessToken: ${FEE_SCHEME_PLATFORM_API_ACCESS_TOKEN}
  bulk-claim-queue:
    name: ${BULK_CLAIM_QUEUE_NAME}