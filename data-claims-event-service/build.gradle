plugins {
    id 'io.freefair.lombok' version '8.14'
    id 'net.researchgate.release' version '3.1.0'
    id("com.diffplug.spotless") version "7.2.1"
    id 'uk.gov.laa.ccms.springboot.laa-ccms-spring-boot-gradle-plugin' version '0.0.42'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/DataClaimsEventServiceApplication.class'])
        }))
    }
}

jacocoTestCoverageVerification {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/DataClaimsEventServiceApplication.class'])
        }))
    }
}

dependencies {

    /**
     * Upgrades to resolve vulnerabilities
     */
    // Upgrade to fix Uncontrolled Recursion vulnerability in commons-lang3
    implementation 'org.apache.commons:commons-lang3:3.18.0'
    // Upgrade to fix vulnerabilities in tomcat-embed-core
    implementation 'org.apache.tomcat.embed:tomcat-embed-core:11.0.10'
    // Upgrade to fix vulnerabilities in netty
    implementation 'io.netty:netty-codec-http2:4.2.4.Final'

    implementation project(':bulk-claim-api')
    implementation project(':claims-api-reference')
    implementation project(':provider-details-api-reference')
    implementation project(':fee-scheme-platform-api-reference')

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'jakarta.validation:jakarta.validation-api:3.1.1'
    implementation 'org.projectlombok:lombok:1.18.38'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'

    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    implementation platform('com.fasterxml.jackson:jackson-bom:2.19.2')
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    runtimeOnly 'com.h2database:h2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:mockserver:1.21.3'
    testImplementation 'org.mock-server:mockserver-client-java:5.15.0'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

spotless {
    java {
        target 'src/*/java/**/*.java'
        importOrder()
        removeUnusedImports()
        cleanthat()
        googleJavaFormat()
    }
}

testlogger {
    theme 'mocha'
}